tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
        maven { url = "https://plugins.gradle.org/m2/" }
        maven { url = 'https://maven.parchmentmc.org' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.53', changing: false
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
        classpath "gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0"
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
        classpath 'org.parchmentmc:librarian:1.+'
        classpath "com.modrinth.minotaur:Minotaur:2.1.2"
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: "com.modrinth.minotaur"

group = 'com.nmmoc7'
version = '1.19.2'

java {
    archivesBaseName = 'DogLib'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

configurations {
    library
    shade
    implementation.extendsFrom library
    shade.extendsFrom library
}

minecraft {
    // The mappings can be changed at any time and must be in the following format.
    // Channel:   Version:
    // snapshot   YYYYMMDD   Snapshot are built nightly.
    // stable     #          Stables are built at the discretion of the MCP team.
    // official   MCVersion  Official field/method names from Mojang mapping files
    //
    // You must be aware of the Mojang license when using the 'official' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Use non-default mappings at your own risk. They may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'parchment', version: '2022.11.06-1.19.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/removed as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                randombotany {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/removed as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                randombotany {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/removed as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                randombotany {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "doglib.refmap.json"
}

jar {
    manifest {
        attributes([
                'Specification-Title': '${mod_name}',
                'Specification-Vendor': 'edebe',
                'Specification-Version': '1',
                'Implementation-Title': '${mod_name}',
                'Implementation-Version': project.jar.archiveVersion,
                'Implementation-Vendor': 'edebe',
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'MixinConfigs': 'doglib.mixins.json'
        ])
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
    }
    maven {
        url "https://maven.enginehub.org/repo/"
    }
    maven {
        url "https://maven.blamejared.com"
    }
    maven {
        url "https://minecraft.curseforge.com/api/maven/"
    }
    maven {
        url "https://maven.cloudsmith.io/geckolib3/geckolib/"
    }
    maven {
        url "https://cursemaven.com"
    }
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    maven {
        url 'https://maven.tterrag.com'
    }
    maven {
        name "curios"
        url "https://maven.theillusivec4.top/"
    }
    mavenCentral()
}

dependencies {
    // compileOnly 'org.projectlombok:lombok:1.18.4'
    // annotationProcessor 'org.projectlombok:lombok:1.18.4'
    // testCompileOnly 'org.projectlombok:lombok:1.18.4'
    // testAnnotationProcessor 'org.projectlombok:lombok:1.18.4'

    // Specify the version of Minecraft to use. If this is any group other than 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency, and its patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.4'

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation 'org.jetbrains:annotations:20.1.0'

    jarJar("com.tterrag.registrate:Registrate:MC1.19-1.1.5") {
        jarJar.ranged(it, '[MC1.19-1.1.5,)')
    }

    implementation 'com.tterrag.registrate:Registrate:MC1.19-1.1.5'

    library 'com.eliotlash.mclib:mclib:20'
    library group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.0'
    library group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.0'

    shade 'com.eliotlash.mclib:mclib:20'
    shade group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.0'
    shade group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'

    test {
        useJUnitPlatform()
    }
    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.19.2-76:api")
    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.19.2-76")

    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.19.2-5.1.1.0:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.19.2-5.1.1.0")
}

jar.finalizedBy('reobfJar')